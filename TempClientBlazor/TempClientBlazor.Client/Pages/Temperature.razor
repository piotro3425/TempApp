@page "/temperature"
@rendermode InteractiveWebAssembly
@using TempApp.Models

<PageTitle>Temperature</PageTitle>

<h3 style="text-align: center;">Temperature</h3>

<p style="text-align: center; font-size: 200px" role="status">@currentTemperature °C</p>

<button class="btn btn-primary" @onclick="GetTemperature">Get Temp</button>
<label>
   <input type="checkbox" style="margin-left: 10px;" @onchange="CheckedChange"/>
   Auto Update
</label>

@code {
   double currentTemperature = 0.0;
   private System.Timers.Timer? timer;

   protected override void OnInitialized()
   {
      timer = new System.Timers.Timer(5000);
      timer.Elapsed += OnTimerElapsed;
      timer.Enabled = false;
   }
   private async void OnTimerElapsed(object? source, System.Timers.ElapsedEventArgs e)
   {
      await GetFromServer();
      await InvokeAsync(StateHasChanged);
   }

   private void CheckedChange(ChangeEventArgs e)
   {
      if (bool.TryParse(e?.Value?.ToString(), out bool checkedState))
      {
         if(checkedState)
            timer?.Start();
         else
            timer?.Stop();
      }
   }

    private async void GetTemperature(MouseEventArgs args)
        => await GetFromServer();

    private async Task GetFromServer()
    {
      try
      {
         HttpClient http = new HttpClient();
         HttpResponseMessage res = await http.GetAsync("https://localhost:7182/api/Temp");
         res.EnsureSuccessStatusCode();
         Temp? temp = await res.Content.ReadFromJsonAsync<Temp>();
         if (temp is not null)
            currentTemperature = temp.Temperature;
      }
      catch (Exception) { }
   }
}
